name: Deploy Frontend

on:
  push:
    branches:
      - main # Set this to your default branch
    paths:
      - '/frontend/**'
      - ".github/workflows/deploy-frontend.yml"

jobs:
  deploy:
    runs-on: ubuntu-latest
    env:
      AWS_REGION: "us-west-1" # Set your AWS region here
      AWS_S3_BUCKET: app.samroy.io # Set your S3 bucket name here

    steps:
      - uses: actions/checkout@v2

      - name: Install dependencies
        run: npm install

      - name: Build
        run: npm run build

      - name: Create S3 bucket if it does not exist
        run: |
          if ! aws s3 ls "s3://$AWS_S3_BUCKET" 2>&1 | grep -q 'NoSuchBucket'; then
            echo "Bucket already exists"
          else
            aws s3 mb "s3://$AWS_S3_BUCKET" --region $AWS_REGION
            echo "Bucket created"
          fi
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

      - name: Turn off Block Public Access
        run: |
          aws s3api put-public-access-block \
          --bucket ${{ env.AWS_S3_BUCKET }} \
          --public-access-block-configuration "BlockPublicAcls=false,IgnorePublicAcls=false,BlockPublicPolicy=false,RestrictPublicBuckets=false"
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

      - name: Update bucket policy to allow public access
        run: |
          BUCKET_POLICY=$(cat <<-END
          {
            "Version":"2012-10-17",
            "Statement":[
              {
                "Sid":"PublicReadGetObject",
                "Effect":"Allow",
                "Principal": "*",
                "Action":["s3:GetObject"],
                "Resource":["arn:aws:s3:::$AWS_S3_BUCKET/*"]
              }
            ]
          }
          END
          )
          aws s3api put-bucket-policy --bucket $AWS_S3_BUCKET --policy "$BUCKET_POLICY"
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

      - name: Configure bucket as a website
        run: |
          aws s3 website s3://$AWS_S3_BUCKET --index-document index.html --error-document error.html
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

      - name: Deploy to S3
        run: |
          aws s3 sync frontend/build/ s3://$AWS_S3_BUCKET --delete
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
